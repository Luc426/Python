#!/usr/bin/python3.8

# Récupère des données de clients à contacter sur un fichier CSV depuis un serveur SFTP, puis génère un autre fichier CSV personnalisé 
# adapté aux bases de données de l'entreprise.

import pysftp, os, time, csv

# Options :
targetPath = '/'

# Changer la date du mois dans cette variable (créer le dossier avant) :
downloadPath = 'C:/destination/Mai 2021/'

dossier = time.strftime("%d-%m-%Y")
destination = downloadPath + dossier
dateJour = time.strftime("%Y-%m-%d 12:00:00")
jeton = False

#~*| Etape 1 : Téléchargement du fichier |*~#

with pysftp.Connection('xxx.xxx.xxx.xxx', username='username', password='mot2pass') as sftp:
        print("Connexion TLS établie ...")
        print(" ")
        files = len(sftp.listdir())

        if os.path.isdir(downloadPath + dossier) == False:
            os.mkdir(downloadPath + dossier)

        if files == 1:
            jeton = True
            try:
                nomFichier = sftp.listdir()
                fichier = nomFichier[0]
                sftp.get_d(targetPath, destination, preserve_mtime=True) # Remplacer télécharger par #nomFichier
                sftp.remove(fichier)
            
            except:
                print("Erreur try 1 ... ")
                print(" ")
                  
sftp.close()

#~*| Etape 2 : Création des fichiers de production  |*~#

tableau = []

if jeton == True:
    try :
        # Extraction des données :
        print("Création des fichiers ...")
        print(" ")
        csvfile = open(destination + '/' + fichier, encoding='latin-1', newline='')
        for row in csv.reader(csvfile, delimiter=';'):
            tableau.append(row)
            
    except :
        print("Erreur try 2")
        print(" ")

# Création du tableau pour mission.csv :
    
    contacts = []
    i = 0
    limite = len(tableau)
    for row in tableau:
        contacts.append(["0","Mission Sortant J+3",dateJour,"",tableau[i][2],tableau[i][1],tableau[i][3],tableau[i][4],tableau[i][5],tableau[i][6],
        tableau[i][7],tableau[i][8],tableau[i][10],tableau[i][9],tableau[i][11],tableau[i][12],tableau[i][13],
        tableau[i][14],tableau[i][15],tableau[i][0]])
        i = i + 1
        
    # Création du code client :
    
    i = 0
    timeCode = time.strftime("%y%m%d")
    for row in contacts:
        row[3] = str(timeCode) + "_" + str(i) + "_26"
        i = i + 1
    
    # Traitement des numéros : 
    
    for row in contacts:
        row[15] = row[15].replace(" ", "")
     
    # Correction de lead_creation_date:
    leadCreationDate = time.strftime("%d/%m/%Y")
    for row in contacts:
        if (row[11] == '44333') or (row[11] == '44334'):
            row[11] = leadCreationDate 

    # Suppression de la ligne 1 portant les noms de colonnes : (name, surname...)
    
    del contacts[0]

    # Création du fichier mission.csv :
    
    try :
        mission = open(destination + '/nom.csv', 'w', encoding='latin-1', newline='')
        ecrire = csv.writer(mission, delimiter=';')
        for ligneContact in contacts:
            ecrire.writerow(ligneContact)

    except :
        print("Erreur try 3")
        print(" ")
        
    # Création du tableau pour CRM.csv :
    
    contactsCRM = []
    i = 0
    for row in contacts:
        contactsCRM.append(["0",dateJour,contacts[i][4],contacts[i][5],contacts[i][12],contacts[i][14],contacts[i][17],contacts[i][3],"",contacts[i][15],"","","",contacts[i][19],
        "0000-00-00",contacts[i][1],"","0","0000-00-00"])
        i = i + 1
    
    # Traitement des numéros pour le crm (récupération des numéros à partir de la droite:
    
    for row in contactsCRM:
        row[9] = row[9][-9:]

    # Création du fichier CRM.csv :
    
    try:
        crm = open(destination + '/CRM mission.csv', 'w', encoding='latin-1', newline='')
        ecrire = csv.writer(crm, delimiter=',')
        for ligneContact in contactsCRM:
            ecrire.writerow(ligneContact)

    except :
        print("Erreur try 4")
        print(" ")
        
# Création du tableau pour automate.csv :
    
    contactsAutomate = []

    i = 0
    for row in contactsCRM:
        if (row[9] != '565232031') and (row[9] != '#N/A'):
            row[9] = "0" + row[9]
            contactsAutomate.append([contactsCRM[i][9],contactsCRM[i][2],contactsCRM[i][7],"","","","","","2","","",""])
        i = i + 1

    # Création du fichier automate.csv :
    
    try :
        automate = open(destination + '/Automate mission.csv', 'w', encoding='latin-1', newline='')
        ecrire = csv.writer(automate, delimiter=';')
        for ligneContact in contactsAutomate:
            ecrire.writerow(ligneContact)

    except :
        print("Erreur try 5")
        print(" ")
        
    # Création du fichier callcenters.csv.
    colonnesCallCenters = ['numero','groupe','datetime','id_contact','surname','name','email_address','phone_number','statut_de_la_piste','proprietaire_de_la_piste','mc_form_id','lead_creation_date','hcp_erp_number','hearing_center','hcp_postal_code','hcp_phone_number','hcp_address','hcp_city','hcp_email_address','type']
    
    contactsCallCenters = []
    
    i = 0
    for row in contacts:
        if row[15] == '0565232031':
            contactsCallCenters.append(row)

    if len(contactsCallCenters) > 0:  
        try:
            callCenterCsv = open(destination + '/Call Centers.csv', 'w', encoding='latin-1', newline='')
            ecrire = csv.writer(callCenterCsv, delimiter=';')
            ecrire.writerow(colonnesCallCenters)
         
            for ligneContact in contactsCallCenters:
                ecrire.writerow(ligneContact)

        except :
            print("Erreur try 6")
            print(" ")
        
if jeton == False:
    print("Rien à faire!")
    print(" ")
        
print("Programme terminé")
